server: 
   port: 8083
eureka:
   client: 
      registerWithEureka: true
      fetchRegistry: true
      serviceUrl:
         defaultZone: http://localhost:8761/eureka/
   instance:
      hostname: localhost

management:
  health:
    circuitbreakers:
      enabled: true
    ratelimiters:
      enabled: true
  endpoints: 
    web:
      exposure:
        include:
        - '*'
  endpoint:
    health:
      show-details: always

resilience4j:
  circuitbreaker:
    configs:
      default:
        register-health-indicator: true
        event-consumer-buffer-size: 10
        failure-rate-threshold: 50
        minimum-number-of-calls: 5
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 5s
        permitted-number-of-calls-in-half-open-state: 3
        sliding-window-size: 10
        sliding-window-type: count-based
        slow-call-duration-threshold: 5000
        slow-call-rate-threshold: 50
    instances:
      myCircuitBreaker:
       baseConfig: default






spring:
  cloud:
    gateway:
      routes: 
        - id: order-service
          uri: lb://ORDER-SERVICE
          filters:
            - name: CircuitBreaker
              args:
                name: myCircuitBreaker
                fallbackUri: forward:/orderFallback
          predicates:
              - Path=/order/**
        - id: payment-service
          uri: lb://PAYMENT-SERVICE
          filters:
            - name: CircuitBreaker
              args:
                name: myCircuitBreaker
                fallbackUri: forward:/orderFallback
          predicates:
            - Path=/payment/**
        - id: security-jwt
          uri: lb://SECURITY-JWT
          filters:
            - name: CircuitBreaker
              args:
                name: myCircuitBreaker
                fallbackUri: forward:/orderFallback
          predicates:
            - Path=/jwtauth/**
